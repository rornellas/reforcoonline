package br.com.reforcoonline.entity;

// Generated 04/01/2014 16:22:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Conhecimento generated by hbm2java
 */
@Entity
@Table(name = "conhecimento", uniqueConstraints = @UniqueConstraint(columnNames = "nome"))
public class Conhecimento implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Area area;
	private String nome;
	private String descricao;
	private Set<Conhecimentopessoa> conhecimentopessoas = new HashSet<Conhecimentopessoa>(
			0);

	public Conhecimento() {
	}

	public Conhecimento(Area area, String nome) {
		this.area = area;
		this.nome = nome;
	}

	public Conhecimento(Area area, String nome, String descricao,
			Set<Conhecimentopessoa> conhecimentopessoas) {
		this.area = area;
		this.nome = nome;
		this.descricao = descricao;
		this.conhecimentopessoas = conhecimentopessoas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idArea", nullable = false)
	public Area getArea() {
		return this.area;
	}

	public void setArea(Area area) {
		this.area = area;
	}

	@Column(name = "nome", unique = true, nullable = false, length = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "descricao")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conhecimento")
	public Set<Conhecimentopessoa> getConhecimentopessoas() {
		return this.conhecimentopessoas;
	}

	public void setConhecimentopessoas(
			Set<Conhecimentopessoa> conhecimentopessoas) {
		this.conhecimentopessoas = conhecimentopessoas;
	}

}
